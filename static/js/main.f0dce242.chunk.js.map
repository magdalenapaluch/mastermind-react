{"version":3,"sources":["modules/Pin/StyledPin.js","modules/Pin/Pin.js","modules/SelectedPin/SelectedPin.js","modules/ChoicePins/StyledChoicePins.js","modules/ChoicePins/ChoicePins.js","modules/Slot/StyledSlot.js","modules/Slot/Slot.js","modules/Results/StyledResults.js","modules/Results/StyledResultSlot.js","modules/Results/Results.js","modules/Check/Check.js","modules/SlotRow/StyledSlotRow.js","modules/SlotRow/StyledSlotWrapper.js","modules/SlotRow/SlotRow.js","modules/Configuration/Configuration.js","modules/Boardgame/StyledBoardgame.js","modules/Boardgame/Boardgame.js","App.js","serviceWorker.js","index.js"],"names":["StyledPin","styled","div","props","color","clickable","Pin","handleColorChange","onColorChange","bind","this","onClick","letter","React","Component","SelectedPin","className","StyledChoicePins","StyledChoicePinsWrapper","ChoicePins","handleColorSelection","state","selectedColor","passedColor","possibleColors","map","item","name","key","StyledSlot","Slot","handleClick","updateUserConfig","slotNum","activeState","userConfig","rowNum","StyledResults","StyledResultSlot","Results","colors","x","i","Array","length","Check","tempConfig","configuration","tempUserConfig","results","forEach","index","push","tempConfigSec","tempUserConfigSec","includes","splice","indexOf","handleResultsChange","join","alert","restart","loose","onRowChange","Button","size","variant","StyledSlotRow","padding","StyledSlotWrapper","SlotRow","activeRow","currentRow","num","Configuration","StyledBoardgame","Boardgame","keyCode","handleColorState","handleRowchange","handleKeyPress","handleRestart","handleGameOver","randomColors","sort","Math","random","slice","setState","newArray","event","find","o","document","addEventListener","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f0dce242.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst StyledPin = styled.div`\r\n    cursor: pointer;\r\n    margin: 10px 10px 10px 0;\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 100%;\r\n    border: 1px solid black;\r\n    color: #3BC;\r\n    background-color: ${props => props.color || \"transparent\"};\r\n    cursor: ${props => props.clickable ? \"pointer\" : \"auto\"};\r\n    transition: background-color .2s\r\n`\r\n\r\nexport default StyledPin;","import React from 'react';\r\nimport StyledPin from \"./StyledPin.js\";\r\n\r\nclass Pin extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n      }\r\n    handleColorChange = () => {\r\n        this.props.onColorChange(this.props.color);\r\n\t  };\r\n    render() {\r\n        return (\r\n        <StyledPin clickable={true} color={this.props.color} onClick={this.handleColorChange}>{this.props.letter}</StyledPin>\r\n        );\r\n    }\r\n}\r\nexport default Pin;","import React from \"react\";\r\nimport StyledPin from \"../Pin/StyledPin.js\";\r\n\r\nclass SelectedPin extends React.Component {\r\n  render() {\r\n    return (\r\n      <StyledPin\r\n        className=\"gameboard__pin gameboard__pin--selected\"\r\n        color={this.props.color}\r\n      ></StyledPin>\r\n    );\r\n  }\r\n}\r\nexport default SelectedPin;\r\n","import styled from 'styled-components'\r\n\r\nconst StyledChoicePins = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex: 0 0 50%;\r\n    max-width: 50%;\r\n    flex-wrap: wrap;\r\n`\r\nconst StyledChoicePinsWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-top: 1px solid black;\r\n    padding: 0 20px;\r\n`\r\n\r\nexport {StyledChoicePins, StyledChoicePinsWrapper};","import React from 'react';\r\nimport Pin from '../Pin/Pin.js';\r\nimport SelectedPin from '../SelectedPin/SelectedPin.js';\r\nimport {StyledChoicePins, StyledChoicePinsWrapper} from './StyledChoicePins.js';\r\n\r\nclass ChoicePins extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleColorSelection = this.handleColorSelection.bind(this);\r\n\t\tthis.state = {selectedColor:null};\r\n\t}\r\n\r\n\thandleColorSelection(passedColor){\r\n\t\tthis.props.handleColorChange(passedColor);\r\n\t}\r\n\t  \r\n  \trender() {\r\n\t\treturn (\r\n\t\t<div className=\"ChoicePins\">\r\n\t\t\t<StyledChoicePinsWrapper>\r\n\t\t\t\t<StyledChoicePins>\r\n\t\t\t\t\t{this.props.possibleColors.map((item)=>{\r\n\t\t\t\t\t\treturn <Pin color={item.name} letter={item.letter} key={item.name} onColorChange={this.handleColorSelection}></Pin>\r\n\t\t\t\t\t})}\r\n\t\t\t\t</StyledChoicePins>\r\n\t\t\t\t<SelectedPin color={`${this.props.selectedColor}`} ></SelectedPin>\r\n\t\t\t</StyledChoicePinsWrapper>\r\n\t\t</div>\r\n    );\r\n  }\r\n}\r\nexport default ChoicePins;","import styled from 'styled-components'\r\n\r\nconst StyledSlot = styled.div`\r\n    width: 30px;\r\n    margin-right: 10px;\r\n    height: 30px;\r\n    border-radius: 100%;\r\n    background-color: ${props => props.color || \"gray\"};\r\n    border: 1px solid black;\r\n    cursor:${props => props.clickable ? \"pointer\" :  \"auto\"};\r\n    pointer-events:${props => props.clickable ? \"auto\" :  \"none\"};\r\n`\r\n\r\nexport default StyledSlot;","import React from 'react';\r\nimport StyledSlot from './StyledSlot.js';\r\n\r\nclass Slot extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n    handleClick(){\r\n        this.props.updateUserConfig(this.props.slotNum, this.props.selectedColor)\r\n    }\r\n    render() {\r\n        return (\r\n            <StyledSlot\r\n            clickable={this.props.activeState}\r\n            onClick={this.handleClick} \r\n            color={this.props.userConfig[this.props.rowNum][this.props.slotNum]}>   \r\n            </StyledSlot>\r\n        );\r\n    }\r\n}\r\nexport default Slot;","import styled from 'styled-components'\r\n\r\nconst StyledResults = styled.div`\r\n    display: flex;\r\n    width: 40px;\r\n    flex-wrap: wrap;\r\n    margin-left: 20px;\r\n`\r\n\r\nexport default StyledResults;","import styled from 'styled-components'\r\n\r\nconst StyledResultSlot = styled.div`\r\n    margin: 10px 10px 0 0;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 100%;\r\n    background-color: ${props => props.color || \"transparent\"};\r\n    border: 1px solid black;\r\n`\r\n\r\nexport default StyledResultSlot;\r\n","import React from \"react\";\r\nimport StyledResults from './StyledResults.js';\r\nimport StyledResultSlot from './StyledResultSlot.js';\r\n\r\nclass Results extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <StyledResults>\r\n        {/* generate as many as is in the array */}\r\n        {this.props.colors.map((x, i) => (\r\n          <StyledResultSlot color={this.props.colors[i]} key={i} ></StyledResultSlot>\r\n        ))}\r\n        {/* generate the rest (the empty ones), so in sum there is four */}\r\n        {[...Array(4 - this.props.colors.length)].map((x, i) => (\r\n          <StyledResultSlot key={i}></StyledResultSlot>\r\n        ))}\r\n      </StyledResults>\r\n    );\r\n  }\r\n}\r\nexport default Results;","import React from \"react\";\r\nimport Results from \"../Results/Results.js\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nclass Check extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    let tempConfig = [...this.props.configuration.map(color => color.name)];\r\n    let tempUserConfig = [...this.props.userConfig[this.props.rowNum]];\r\n    let results = [];\r\n    this.props.configuration.forEach((item, index) => {\r\n      if (item.name === this.props.userConfig[this.props.rowNum][index]) {\r\n        results.push(\"black\");\r\n        tempConfig[index] = \"\"; //remove from user temp\r\n        tempUserConfig[index] = \"\";\r\n      }\r\n    });\r\n    let tempConfigSec = [...tempConfig];\r\n    let tempUserConfigSec = [...tempUserConfig];\r\n\r\n    tempUserConfig.forEach((item, index) => {\r\n      if (tempConfigSec.includes(item) && item) {\r\n        results.push(\"white\");\r\n        tempUserConfigSec.splice(index, 1); //remove from user temp\r\n        tempConfigSec.splice(tempConfigSec.indexOf(item), 1);\r\n      }\r\n    });\r\n    this.props.handleResultsChange(results);\r\n    if(results.join('') === \"blackblackblackblack\"){\r\n      alert('you won');\r\n      this.props.restart();\r\n    }else if(this.props.rowNum===0){\r\n      this.props.loose();\r\n    }else{\r\n      this.props.onRowChange();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.props.userConfig[this.props.rowNum].includes(null) && this.props.activeState && (\r\n          <Button size=\"small\" variant=\"outlined\" color=\"primary\" className=\"gameboard__check\" onClick={this.handleClick}>\r\n            Check\r\n          </Button>\r\n        )}\r\n        <div className=\"gameboard__user-result\">\r\n          <Results colors={this.props.results[this.props.rowNum]}></Results>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Check;\r\n","import styled from 'styled-components'\r\n\r\nconst StyledSlotRow = styled.div`\r\n    display: flex;\r\n    flex: 0 1 70%;\r\n    padding: ${props => props.padding ? \"0 20px\" : 0};\r\n`\r\n\r\nexport default StyledSlotRow;","import styled from 'styled-components'\r\n\r\nconst StyledSlotWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 50px;\r\n    width: 100%;\r\n    border-top: 1px solid black;\r\n    align-items: center;\r\n    background-color: ${props => props.activeState ? \"wheat\" : \"transparent\"};\r\n    padding: 0 20px;\r\n`\r\n\r\nexport default StyledSlotWrapper;","import React from \"react\";\r\nimport Slot from \"../Slot/Slot.js\";\r\nimport Check from \"../Check/Check.js\";\r\nimport StyledSlotRow from \"./StyledSlotRow.js\";\r\nimport StyledSlotWrapper from \"./StyledSlotWrapper.js\";\r\n\r\nclass SlotRow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeRow: this.props.currentRow };\r\n  }\r\n\r\n  updateUserConfig(num, color) {\r\n    this.props.updateUserConfig(num, color);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <StyledSlotWrapper activeState={this.props.currentRow === this.props.rowNum ? true : false}\r\n        key={this.props.currentRow}\r\n      >\r\n        <StyledSlotRow>\r\n          {[...Array(4)].map((x, i) => (\r\n            <Slot\r\n              key={i}\r\n              slotNum={i}\r\n              rowNum={this.props.rowNum}\r\n              selectedColor={this.props.selectedColor}\r\n              updateUserConfig={this.props.updateUserConfig}\r\n              userConfig={this.props.userConfig}\r\n              activeState={this.props.currentRow === this.props.rowNum ? true : false}\r\n            ></Slot>\r\n          ))}\r\n        </StyledSlotRow>\r\n        <Check\r\n          restart = {this.props.restart}\r\n          userConfig={this.props.userConfig}\r\n          rowNum={this.props.rowNum}\r\n          currentRow={this.props.currentRow}\r\n          onRowChange={this.props.onRowChange}\r\n          configuration={this.props.configuration}\r\n          handleResultsChange={this.props.handleResultsChange}\r\n          results={this.props.results}\r\n          loose={this.props.loose}\r\n          activeState={this.props.currentRow === this.props.rowNum ? true : false}\r\n        ></Check>\r\n      </StyledSlotWrapper>\r\n    );\r\n  }\r\n}\r\nexport default SlotRow;\r\n","\r\n\r\nimport React from 'react';\r\nimport StyledSlotRow from \"../SlotRow/StyledSlotRow.js\";\r\nimport StyledPin from '../Pin/StyledPin.js';\r\n\r\nclass Configuration extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n        <StyledSlotRow padding={true}>\r\n            {this.props.colors.map((item)=>{\r\n\t\t\t\treturn <StyledPin clickable={false} key={`${item.name}`}></StyledPin>\r\n\t\t\t})}\r\n        </StyledSlotRow>\r\n        );\r\n    }\r\n}\r\nexport default Configuration;","import styled from 'styled-components'\r\n\r\nconst StyledBoardgame = styled.div`\r\n    padding: 20px 0;\r\n    border: 1px solid black;\r\n    background-color: burlywood;\r\n`\r\n\r\nexport default StyledBoardgame;","import React from 'react';\r\nimport ChoicePins from '../ChoicePins/ChoicePins.js';\r\nimport SlotRow from '../SlotRow/SlotRow.js';\r\nimport Configuration from '../Configuration/Configuration.js';\r\nimport StyledBoardgame from './StyledBoardgame.js';\r\n\r\nclass Boardgame extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {selectedColor:null,currentRow:7, userConfig:[[null, null, null, null],[null, null, null, null],[null, null, null, null],[null, null, null, null],[null, null, null, null],[null, null, null, null],[null, null, null, null],[null, null, null, null]],  results: [[],[], [], [], [], [], [], []]};\r\n\t\tthis.possibleColors = [\r\n\t\t\t{name:'red', letter:\"Q\", keyCode: 81}, \r\n\t\t\t{name:'green', letter:\"W\", keyCode: 87}, \r\n\t\t\t{name:'blue', letter:\"E\", keyCode: 69}, \r\n\t\t\t{name:'pink', letter:\"R\", keyCode: 82}, \r\n\t\t\t{name:'brown', letter:\"A\", keyCode: 65},\r\n\t\t\t{name:'orange', letter:\"S\", keyCode: 83}, \r\n\t\t\t{name:'black', letter:\"D\", keyCode: 68}, \r\n\t\t\t{name:'white', letter:\"F\", keyCode: 70}\r\n\t\t];\r\n\t\tthis.handleColorState = this.handleColorState.bind(this);\r\n\t\tthis.handleRowchange = this.handleRowchange.bind(this);\r\n\t\tthis.updateUserConfig = this.updateUserConfig.bind(this);\r\n\t\tthis.handleResultsChange = this.handleResultsChange.bind(this);\r\n\t\tthis.handleKeyPress = this.handleKeyPress.bind(this);\r\n\t\tthis.handleRestart = this.handleRestart.bind(this);\r\n\t\tthis.handleGameOver = this.handleGameOver.bind(this);\r\n\t\tthis.randomColors = [...this.possibleColors].sort(() => .5 - Math.random()).slice(0,4);\r\n\t}\r\n\thandleRestart(){\r\n\t\tthis.setState({selectedColor:null,currentRow:7, userConfig:[[null, null, null, null],[null, null, null, null],[null, null, null, null],[null, null, null, null],[null, null, null, null],[null, null, null, null],[null, null, null, null],[null, null, null, null]],  results: [[],[], [], [], [], [], [], []]});\r\n\t}\r\n\thandleGameOver(){\r\n\t\talert(`you lost, correct combination was: ${this.randomColors.map(color => color.name).join(' ')}`);\r\n\t\tthis.handleRestart();\r\n\t}\r\n\t\r\n\thandleColorState(passedColor){\r\n\t\tthis.setState({selectedColor: passedColor});\r\n\t}\r\n\thandleRowchange(){\r\n\t\tthis.setState({currentRow: this.state.currentRow-1});\r\n\t}\r\n\thandleResultsChange(results){\r\n\t\tlet newArray = this.state.results;\r\n\t\tnewArray[this.state.currentRow] = results;\r\n\t\tthis.setState({results: newArray});\r\n\t\t\r\n\t}\r\n\tupdateUserConfig(num, color){\r\n\t\tlet newArray = [...this.state.userConfig];\r\n\t\tnewArray[this.state.currentRow][num] = color;\r\n\t\tthis.setState({userConfig: newArray});\r\n\t}\r\n\r\n\thandleKeyPress(event){\r\n\t\tthis.handleColorState(this.possibleColors.find(o => o.keyCode === event.keyCode) && this.possibleColors.find(o => o.keyCode === event.keyCode).name);\r\n\r\n\t  }\r\n\tcomponentDidMount(){\r\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyPress, false);\r\n\t}\r\n\t\r\n  render() {\r\n    return (\r\n      <StyledBoardgame>\r\n\t\t  \t<Configuration colors={this.randomColors}></Configuration>\r\n\t\t\t{[...Array(8)].map((x, i) =>\r\n\t\t\t\t<SlotRow key={`${i}`} rowNum={i} updateUserConfig={this.updateUserConfig} currentRow={this.state.currentRow} selectedColor={this.state.selectedColor} userConfig={this.state.userConfig} configuration={this.randomColors} onRowChange={this.handleRowchange} handleResultsChange={this.handleResultsChange}results={this.state.results} restart={this.handleRestart} loose={this.handleGameOver}></SlotRow>\r\n\t\t\t)}\r\n          \t<ChoicePins handleColorChange={this.handleColorState} possibleColors={this.possibleColors} selectedColor={this.state.selectedColor}></ChoicePins>\r\n      </StyledBoardgame>\r\n    );\r\n  }\r\n}\r\nexport default Boardgame;","import React from 'react';\r\nimport './App.css';\r\nimport Boardgame from './modules/Boardgame/Boardgame.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <h1>Play mastermind online</h1>\r\n        <div className=\"gameboard\">\r\n      \t\t<Boardgame></Boardgame>\r\n    \t</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}